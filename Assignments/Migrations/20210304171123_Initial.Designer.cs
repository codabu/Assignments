// <auto-generated />
using Assignments.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assignments.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20210304171123_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assignments.Models.Country", b =>
                {
                    b.Property<string>("CountryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LogoImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CountryID");

                    b.HasIndex("GameID");

                    b.HasIndex("SportID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryID = "aus",
                            GameID = "p",
                            LogoImage = "austria.png",
                            Name = "Austria",
                            SportID = "cano"
                        },
                        new
                        {
                            CountryID = "bra",
                            GameID = "so",
                            LogoImage = "brazil.png",
                            Name = "Brazil",
                            SportID = "cycl"
                        },
                        new
                        {
                            CountryID = "can",
                            GameID = "wo",
                            LogoImage = "canada.png",
                            Name = "Canada",
                            SportID = "curl"
                        },
                        new
                        {
                            CountryID = "chi",
                            GameID = "so",
                            LogoImage = "china.png",
                            Name = "China",
                            SportID = "dive"
                        },
                        new
                        {
                            CountryID = "cyp",
                            GameID = "yo",
                            LogoImage = "cyprus.png",
                            Name = "Cyprus",
                            SportID = "brea"
                        },
                        new
                        {
                            CountryID = "fin",
                            GameID = "yo",
                            LogoImage = "finland.png",
                            Name = "Finland",
                            SportID = "skat"
                        },
                        new
                        {
                            CountryID = "fra",
                            GameID = "yo",
                            LogoImage = "france.png",
                            Name = "France",
                            SportID = "brea"
                        },
                        new
                        {
                            CountryID = "ger",
                            GameID = "so",
                            LogoImage = "germany.png",
                            Name = "Germany",
                            SportID = "dive"
                        },
                        new
                        {
                            CountryID = "ita",
                            GameID = "wo",
                            LogoImage = "italy.png",
                            Name = "Italy",
                            SportID = "bobs"
                        },
                        new
                        {
                            CountryID = "jam",
                            GameID = "wo",
                            LogoImage = "jamaica.png",
                            Name = "Jamaica",
                            SportID = "bobs"
                        },
                        new
                        {
                            CountryID = "jap",
                            GameID = "wo",
                            LogoImage = "japan.png",
                            Name = "Japan",
                            SportID = "bobs"
                        },
                        new
                        {
                            CountryID = "mex",
                            GameID = "so",
                            LogoImage = "mexico.png",
                            Name = "Mexico",
                            SportID = "dive"
                        },
                        new
                        {
                            CountryID = "net",
                            GameID = "so",
                            LogoImage = "netherlands.png",
                            Name = "Netherlands",
                            SportID = "cycl"
                        },
                        new
                        {
                            CountryID = "pak",
                            GameID = "p",
                            LogoImage = "pakistan.png",
                            Name = "Pakistan",
                            SportID = "cano"
                        },
                        new
                        {
                            CountryID = "por",
                            GameID = "yo",
                            LogoImage = "portugal.png",
                            Name = "Portugal",
                            SportID = "skat"
                        },
                        new
                        {
                            CountryID = "rus",
                            GameID = "yo",
                            LogoImage = "russia.png",
                            Name = "Russia",
                            SportID = "brea"
                        },
                        new
                        {
                            CountryID = "slo",
                            GameID = "yo",
                            LogoImage = "slovakia.png",
                            Name = "Slovakia",
                            SportID = "skat"
                        },
                        new
                        {
                            CountryID = "swe",
                            GameID = "wo",
                            LogoImage = "sweden.png",
                            Name = "Sweden",
                            SportID = "curl"
                        },
                        new
                        {
                            CountryID = "tha",
                            GameID = "p",
                            LogoImage = "thailand.png",
                            Name = "Thailand",
                            SportID = "arch"
                        },
                        new
                        {
                            CountryID = "ukr",
                            GameID = "p",
                            LogoImage = "ukraine.png",
                            Name = "Ukraine",
                            SportID = "arch"
                        },
                        new
                        {
                            CountryID = "uni",
                            GameID = "wo",
                            LogoImage = "unitedkingdom.png",
                            Name = "United Kingdom",
                            SportID = "curl"
                        },
                        new
                        {
                            CountryID = "uru",
                            GameID = "p",
                            LogoImage = "uruguay.png",
                            Name = "Uruguay",
                            SportID = "arch"
                        },
                        new
                        {
                            CountryID = "usa",
                            GameID = "so",
                            LogoImage = "usa.png",
                            Name = "U.S.A",
                            SportID = "cycl"
                        },
                        new
                        {
                            CountryID = "zim",
                            GameID = "p",
                            LogoImage = "zimbabwe.png",
                            Name = "Zimbabwe",
                            SportID = "cano"
                        });
                });

            modelBuilder.Entity("Assignments.Models.Game", b =>
                {
                    b.Property<string>("GameID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameID = "wo",
                            Name = "Winter Olympics"
                        },
                        new
                        {
                            GameID = "so",
                            Name = "Summer Olympics"
                        },
                        new
                        {
                            GameID = "p",
                            Name = "Paralympics"
                        },
                        new
                        {
                            GameID = "yo",
                            Name = "Youth Olympic Games"
                        });
                });

            modelBuilder.Entity("Assignments.Models.Sport", b =>
                {
                    b.Property<string>("SportID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportID");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportID = "curl",
                            Name = "Curling/Indoor"
                        },
                        new
                        {
                            SportID = "bobs",
                            Name = "Bobsleigh/Outdoor"
                        },
                        new
                        {
                            SportID = "dive",
                            Name = "Diving/Indoor"
                        },
                        new
                        {
                            SportID = "cycl",
                            Name = "Road Cycling/Outdoor"
                        },
                        new
                        {
                            SportID = "arch",
                            Name = "Archery/Indoor"
                        },
                        new
                        {
                            SportID = "cano",
                            Name = "Canoe Sprint/Outdoor"
                        },
                        new
                        {
                            SportID = "brea",
                            Name = "Breakdancing/Indoor"
                        },
                        new
                        {
                            SportID = "skat",
                            Name = "Skateboarding/Outdoor"
                        });
                });

            modelBuilder.Entity("Assignments.Models.Country", b =>
                {
                    b.HasOne("Assignments.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameID");

                    b.HasOne("Assignments.Models.Sport", "Sport")
                        .WithMany()
                        .HasForeignKey("SportID");

                    b.Navigation("Game");

                    b.Navigation("Sport");
                });
#pragma warning restore 612, 618
        }
    }
}
